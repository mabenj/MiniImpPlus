//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\src\antlr4\MiniImpPlus.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MiniImpPlusParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface IMiniImpPlusVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.truth"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTruth([NotNull] MiniImpPlusParser.TruthContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] MiniImpPlusParser.ExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] MiniImpPlusParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] MiniImpPlusParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmt([NotNull] MiniImpPlusParser.StmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelect([NotNull] MiniImpPlusParser.SelectContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.iterat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIterat([NotNull] MiniImpPlusParser.IteratContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSet([NotNull] MiniImpPlusParser.SetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.write"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWrite([NotNull] MiniImpPlusParser.WriteContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRead([NotNull] MiniImpPlusParser.ReadContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.asInt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsInt([NotNull] MiniImpPlusParser.AsIntContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.asStr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsStr([NotNull] MiniImpPlusParser.AsStrContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecl([NotNull] MiniImpPlusParser.DeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] MiniImpPlusParser.VariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmts([NotNull] MiniImpPlusParser.StmtsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.decls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecls([NotNull] MiniImpPlusParser.DeclsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.scope"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScope([NotNull] MiniImpPlusParser.ScopeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInit([NotNull] MiniImpPlusParser.InitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniImpPlusParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProg([NotNull] MiniImpPlusParser.ProgContext context);
}
