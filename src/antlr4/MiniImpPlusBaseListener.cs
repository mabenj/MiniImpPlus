//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\MiniImpPlus.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMiniImpPlusListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class MiniImpPlusBaseListener : IMiniImpPlusListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.truth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTruth([NotNull] MiniImpPlusParser.TruthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.truth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTruth([NotNull] MiniImpPlusParser.TruthContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] MiniImpPlusParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] MiniImpPlusParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] MiniImpPlusParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] MiniImpPlusParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] MiniImpPlusParser.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] MiniImpPlusParser.FactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] MiniImpPlusParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] MiniImpPlusParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.select"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect([NotNull] MiniImpPlusParser.SelectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.select"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect([NotNull] MiniImpPlusParser.SelectContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.iterat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIterat([NotNull] MiniImpPlusParser.IteratContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.iterat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIterat([NotNull] MiniImpPlusParser.IteratContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet([NotNull] MiniImpPlusParser.SetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet([NotNull] MiniImpPlusParser.SetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.write"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWrite([NotNull] MiniImpPlusParser.WriteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.write"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWrite([NotNull] MiniImpPlusParser.WriteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRead([NotNull] MiniImpPlusParser.ReadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRead([NotNull] MiniImpPlusParser.ReadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.asInt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsInt([NotNull] MiniImpPlusParser.AsIntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.asInt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsInt([NotNull] MiniImpPlusParser.AsIntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.asStr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsStr([NotNull] MiniImpPlusParser.AsStrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.asStr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsStr([NotNull] MiniImpPlusParser.AsStrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecl([NotNull] MiniImpPlusParser.DeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecl([NotNull] MiniImpPlusParser.DeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] MiniImpPlusParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] MiniImpPlusParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmts([NotNull] MiniImpPlusParser.StmtsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmts([NotNull] MiniImpPlusParser.StmtsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.decls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecls([NotNull] MiniImpPlusParser.DeclsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.decls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecls([NotNull] MiniImpPlusParser.DeclsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScope([NotNull] MiniImpPlusParser.ScopeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScope([NotNull] MiniImpPlusParser.ScopeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInit([NotNull] MiniImpPlusParser.InitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInit([NotNull] MiniImpPlusParser.InitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniImpPlusParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] MiniImpPlusParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniImpPlusParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] MiniImpPlusParser.ProgContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
